
<%# @response["response"]["venues"].each do |response| %>
  <%#= response["name"] %>
  <br/>
  <%#= response["location"]["lat"] %> ,
  <%#= response["location"]["lng"] %>
  <br/>
<%# end %>
<br/>


<% if !signed_in? %>
  <div class="cover-container d-flex w-100 h-100 p-3 mx-auto flex-column">
      <header class="masthead mb-auto">
      </header>

      <main role="main" class="inner cover card background-card border-light rounded">
        <br/>
        <h1 class="cover-heading card-title">Warbase</h1>
        <br>/
        <%=image_tag "sword.gif" %>
        <br>
        <h2 class="lead card-body">Take over the city!</h3> <br>
          <%= button_to 'Sign up',  new_user_registration_path, method: :get, class: "btn btn-light" %>
          <br/>
      </main>

      <footer class="mastfoot mt-auto">
      </footer>
</div>

<% else %>
<br/>
<br/>
<p id="notice" class="white-text"><%= notice %></p>

<main role="main" >
  <br>
  <br>
  <br>
  <h1 class="border-me">To Battle!</h1>
  <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <section class="table-responsive"> <!-- using this as a cheap underline -->
    </section>
  </div>
</main>

<section class="card embed-responsive embed-responsive-4by3 ">
  <div id="map" class="card-body embed-responsive-item"></div>
    

    <div id="venues"></div>
</section>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE"] %>&callback=initMap"
    async defer></script>

<script>

let map, infoWindow;
function initMap() {
  map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: 40.707984, lng: -74.006486},
    zoom: 19
  });
infoWindow = new google.maps.InfoWindow;
}
// Try HTML5 geolocation.
if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(function(position) {
    var pos = {
      lat: position.coords.latitude,
      lng: position.coords.longitude
    };
    let latlng = new google.maps.LatLng(pos.lat, pos.lng);
    var marker = new google.maps.Marker({
          position: latlng,
          map: map,
          title: "Hey it's <%=@user.username%>!"
        });

    infoWindow.setPosition(pos);
    infoWindow.setContent('Found you!');
    infoWindow.open(map);
    map.setCenter(pos);

    axios.get("https://api.foursquare.com/v2/venues/explore?ll="+pos.lat+","+pos.lng+"&client_id=<%=@foursquare_id%>&client_secret=<%=@foursquare_secret%>&v=20130619")
    .then(function (response) {
      let data = response.data.response.groups[0].items
      // console.log(response.data.response.groups[0].items[0].venue.name);
      // console.log(response.data.response.groups[0].items[0].venue.location.lat);
      // console.log(response.data.response.groups[0].items[0].venue.location.lng);
      // console.log(response.data.response.groups[0].items[1].venue.name);

      // console.log(data.length)

      let mapMarkers = []

      for(let i = 0; i < data.length; i++){
        let latlng = new google.maps.LatLng(data[i].venue.location.lat, data[i].venue.location.lng);
        let lat = new google.maps.LatLng(data[i].venue.location.lat)
        let lng = new google.maps.LatLng(data[i].venue.location.lng)
        let marker = new google.maps.Marker({
          position: latlng,
          map: map,
          title: data[i].venue.name,
          owner: 1,
          hp: 1,
          atk: 1,
          def: 1,
          index: i
        });
        mapMarkers.push(marker)

        axios({
            method: 'get',
            url: '/outposts',
            headers: {
                  // these two are required in order for the request to work
                  'X-CSRF-Token': document.querySelector("meta[name=csrf-token]").content,
                  // lets Rails know this is going to be an AJAX request
                  'X-Requested-With': 'XMLHttpRequest'
                }
              }).then((response) => {
                // console.log(response.data)
                let bases = response.data
                bases.forEach(base =>{
                  for(let i = 0; i < mapMarkers.length; i++){
                    if (marker.title === base.name){
                      marker.owner = base.user_id
                      marker.hp = base.hp
                      marker.atk = base.atk
                      marker.def = base.def
                    }
                    // console.log(marker.hp, marker.atk, marker.def)
                  }
                  })
              })

        marker.setMap(map);
        
            // create the html
          
        // console.log(html)
        // console.log(latlng)
        // console.log(data[i].venue.name)
        
        // mapMarkers.push(marker)
        google.maps.event.addListener(marker, 'click', (function(marker){
          
          let lat = (data[i].venue.location.lat)
          let lng = (data[i].venue.location.lng)
         
                // .then((response) => {})
          return function(){
            // console.log(marker.owner)
            html = `<br/> <div class="info_content"> <button onclick="loadContent(this)" id="buttonClick${marker.index}" data-name="${marker.title}" data-hp="${marker.hp}" data-atk="${marker.atk}" data-def="${marker.def}" data-id="${marker.owner}">Fight!</button></div>`;
            markerDetails = "Location: " + marker.title + "<br/> Owner: " + marker.owner + "<br/> HP: " + marker.hp + " " + html
            infoWindow.setContent(markerDetails);
            infoWindow.open(map, marker)
              
              axios({
                method: 'post',
                url: '/outposts/update',
                // data: {
                //   name: marker.title,
                //   lat: lat,
                //   lng: lng
                // },
                data: "lat=" + lat + "&lng=" + lng + "&name=" + marker.title,
                headers: {
                  // these two are required in order for the request to work
                  'X-CSRF-Token': document.querySelector("meta[name=csrf-token]").content,
                  // lets Rails know this is going to be an AJAX request
                  'X-Requested-With': 'XMLHttpRequest'
                }
              })
                // .then((response) => {})
            }
          })(marker))
      }
        

    })
    .catch(function (error) {
      console.log(error);
    });

    
  }, function() {
    handleLocationError(true, infoWindow, map.getCenter());
  });
} else {
  // Browser doesn't support Geolocation
  handleLocationError(false, infoWindow, map.getCenter());
}

function loadContent(base){
  console.log(base)
  // location.reload()
              let name, hp, atk, def, user_id, playerDamage, baseDamage, currentUserHP
              name = base.getAttribute("data-name")
              console.log("name: " +name)
              hp = base.getAttribute("data-hp")
              console.log("hp: " +hp)
              atk = base.getAttribute("data-atk")
              console.log("atk: " +atk)
              def = base.getAttribute("data-def")
              console.log("def: " +def)
              user_id = base.getAttribute("data-id")
              console.log("user_id: " +user_id)
              if( <%=current_user.def%> > atk ){
                playerDamage = 0
                console.log("Player took lol: " + playerDamage)
              }else{
                playerDamage = (<%=current_user.def%> - atk)
                console.log("Player took :O! : " + playerDamage)
                if(currentUserHP > playerDamage){
                  currentUserHP  = playerDamage - <%= current_user.hp %>
                }else{
                  currentUserHP = currentUserHP - playerDamage
                }
               } 
              if(def > <%= current_user.atk %>){
                baseDamage = 0
                console.log("lol no base damage: " + baseDamage)
              }else{
                baseDamage = (<%= current_user.atk %>) - def  
                if(hp > baseDamage){
                  hp = hp - baseDamage
                  console.log("base current hp is overkill: " + hp)
                  
                }
                else{
                  hp = hp - baseDamage
                  console.log("normal damage: " + hp)
                }
                console.log("current base hp:" +hp)
                console.log("current damage taken:" +baseDamage)
                console.log(atk)
              }
              
                if( currentUserHP <= 0 ){
                  playerStatus = document.createElement('div')
                  playerStatus.classList.add("rpg")
                  playerStatus.innerHTML= "You have died, make a new account. :)"
                  let battleText = document.getElementById('battleText')
                  battleText.appendChild(playerStatus)
                }else if(hp <= 0){
                  console.log(baseDamage)
                    user_id = <%= current_user.id %>
                    playerStatus = document.createElement('div')
                    playerStatus.classList.add("rpg");
                    playerStatus.innerHTML= "Base captured by <%= current_user.username %>!"
                    battleText.appendChild(playerStatus)
                  }
                else{
                  player = document.querySelector("player-info")
                  base = document.querySelector("base-info")
                  player.classList.add("rpg");
                  base.classList.add("rpg");
                  player.innerHTML= "You take " + playerDamage + " damage!"
                  base.innerHMTL= "Base takes " + baseDamage + " damage!"
                  let battleText = document.getElementById('battleText')
                  battleText.appendChild(player)
                  battleText.appendChild(base)
              }

              axios({
                method: 'post',
                url: '/outposts/update',
                // data: {
                //   name: marker.title,
                //   lat: lat,
                //   lng: lng
                // },
                data: "hp=" + hp + "&atk=" + atk + "&def=" + def + "&user_id=" + user_id,
                headers: {
                  // these two are required in order for the request to work
                  'X-CSRF-Token': document.querySelector("meta[name=csrf-token]").content,
                  // lets Rails know this is going to be an AJAX request
                  'X-Requested-With': 'XMLHttpRequest'
                }
              })

              axios({
                method: 'post',
                url: '/users/update',
                // data: {
                //   name: marker.title,
                //   lat: lat,
                //   lng: lng
                // },
                data: "hp=" + currentUserHP,
                headers: {
                  // these two are required in order for the request to work
                  'X-CSRF-Token': document.querySelector("meta[name=csrf-token]").content,
                  // lets Rails know this is going to be an AJAX request
                  'X-Requested-With': 'XMLHttpRequest'
                }
              })

              setTimeout(() => {
                location.reload();
              }, 10000);
            }
          



function handleLocationError(browserHasGeolocation, infoWindow, pos) {
infoWindow.setPosition(pos);
infoWindow.setContent(browserHasGeolocation ?
                      'Error: The Geolocation service failed.' :
                      'Error: Your browser doesn\'t support geolocation.');
infoWindow.open(map);

}




</script>

<section class="card background-card">
<h3> <%= current_user.username %>'s HP: <%= current_user.hp %> </h3>
<h3> ATK: <%= current_user.atk %> </h3>
<h3> DEF: <%= current_user.def %> </h3>
<h3> Number of Bases: <%= current_user.outposts.count%> <h3>
<div id="battleText">
  <div id ="player-info" class="white-text">
    <p class="center-text"> Log: </p><br/>
    <p class="center-text"> Page will reload 10 seconds after log shows... </p>
  </div>
  <div id ="base-info" class="white-text"></div>
</div>
</section>
 
<% end %>


